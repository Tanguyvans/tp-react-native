"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[277],{928:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"exercices/devnotes","title":"Exercise 2: DevNotes","description":"Dans ce deuxi\xe8me exercice, nous allons cr\xe9er une app de notes pour d\xe9veloppeurs. Vous apprendrez :","source":"@site/docs/exercices/02-devnotes.md","sourceDirName":"exercices","slug":"/exercices/devnotes","permalink":"/tp-react-native/docs/exercices/devnotes","draft":false,"unlisted":false,"editUrl":"https://github.com/tanguyvans/tp-react-native/docs/exercices/02-devnotes.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Exercise 2: DevNotes"},"sidebar":"tutorialSidebar","previous":{"title":"Exercise 1: Hello World","permalink":"/tp-react-native/docs/exercices/hello-world"},"next":{"title":"devhub","permalink":"/tp-react-native/docs/exercices/devhub"}}');var i=t(4848),s=t(8453);const r={sidebar_position:3,title:"Exercise 2: DevNotes"},a="DevNotes",l={},d=[{value:"\ud83c\udfaf Objectifs",id:"-objectifs",level:2},{value:"\ud83d\udccb \xc9tape 1 : Cr\xe9ation du composant",id:"-\xe9tape-1--cr\xe9ation-du-composant",level:2},{value:"1.1 Structure des types",id:"11-structure-des-types",level:3},{value:"1.2 Cr\xe9ation du composant",id:"12-cr\xe9ation-du-composant",level:3},{value:"1.3 FlatList",id:"13-flatlist",level:3},{value:"\ud83d\udcdd \xc9tape 2 : Page de d\xe9tail d&#39;une note",id:"-\xe9tape-2--page-de-d\xe9tail-dune-note",level:2},{value:"2.1 Configuration du routage",id:"21-configuration-du-routage",level:3},{value:"2.2 Comment aller vers la page de d\xe9tail d&#39;une note",id:"22-comment-aller-vers-la-page-de-d\xe9tail-dune-note",level:3},{value:"2.3 Pourquoi un Layout ?",id:"23-pourquoi-un-layout-",level:3},{value:"Sans Layout",id:"sans-layout",level:3},{value:"Avec Layout",id:"avec-layout",level:3},{value:"\u2728 \xc9tape 3 : Layout",id:"-\xe9tape-3--layout",level:2},{value:"\u2728 \xc9tape 4 : Nouvelle note",id:"-\xe9tape-4--nouvelle-note",level:2},{value:"4.1 Formulaire de cr\xe9ation",id:"41-formulaire-de-cr\xe9ation",level:3},{value:"4.2 Ajout du bouton de cr\xe9ation",id:"42-ajout-du-bouton-de-cr\xe9ation",level:3},{value:"4.3 Configuration du routage",id:"43-configuration-du-routage",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"devnotes",children:"DevNotes"})}),"\n",(0,i.jsx)(n.p,{children:"Dans ce deuxi\xe8me exercice, nous allons cr\xe9er une app de notes pour d\xe9veloppeurs. Vous apprendrez :"}),"\n",(0,i.jsx)(n.h2,{id:"-objectifs",children:"\ud83c\udfaf Objectifs"}),"\n",(0,i.jsx)(n.p,{children:"Dans cet exercice, vous apprendrez \xe0 :"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Comp\xe9tence"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"\ud83e\udde9 Composants"}),(0,i.jsx)(n.td,{children:"Cr\xe9er et utiliser des composants r\xe9utilisables"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"\ud83d\udcf1 Navigation"}),(0,i.jsx)(n.td,{children:"G\xe9rer la navigation entre diff\xe9rentes pages de l'application"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"\ud83d\udd04 Communication"}),(0,i.jsx)(n.td,{children:"Ma\xeetriser le passage de donn\xe9es entre les \xe9crans"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"\ud83d\udcc2 Architecture"}),(0,i.jsx)(n.td,{children:"Organiser efficacement la structure de votre code"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"Voici \xe0 quoi ressemblera votre app :"}),"\n",(0,i.jsxs)("div",{style:{display:"flex",justifyContent:"center",gap:"20px",margin:"20px 0"},children:[(0,i.jsx)("img",{src:t(4710).A,alt:"DevNotes App - Liste des notes",width:300}),(0,i.jsx)("img",{src:t(6125).A,alt:"DevNotes App - Cr\xe9ation d'une note",width:300})]}),"\n",(0,i.jsx)(n.h2,{id:"-\xe9tape-1--cr\xe9ation-du-composant",children:"\ud83d\udccb \xc9tape 1 : Cr\xe9ation du composant"}),"\n",(0,i.jsx)(n.p,{children:"Commen\xe7ons par cr\xe9er le composant r\xe9utilisable qui affichera chaque note dans la liste."}),"\n",(0,i.jsx)(n.h3,{id:"11-structure-des-types",children:"1.1 Structure des types"}),"\n",(0,i.jsxs)(n.p,{children:["Cr\xe9ez un fichier ",(0,i.jsx)(n.code,{children:"types.ts"})," \xe0 la racine du projet :"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"export type Note = {\n  id: string;\n  title: string;\n  content: string;\n  date: string;\n};\n"})}),"\n",(0,i.jsx)(n.h3,{id:"12-cr\xe9ation-du-composant",children:"1.2 Cr\xe9ation du composant"}),"\n",(0,i.jsxs)(n.p,{children:["Modifiez le composant ",(0,i.jsx)(n.code,{children:"components/NoteCard.tsx"})," pour afficher les notes dans une card:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { View, Text, Pressable, StyleSheet } from "react-native";\nimport { Link } from "expo-router";\nimport { Note } from "../types";\n\ntype Props = {\n  note: Note;\n};\n\nexport default function NoteCard({ note }: Props) {\n  return (\n    // TODO: Ajouter un lien vers la page de d\xe9tail de la note\n    // Faite l\'affichage de la note dans une card: Pressable, View, Text\n    <View></View>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.admonition,{title:"Conseil",type:"tip",children:(0,i.jsxs)(n.p,{children:["Inspirez-vous du code de l'exercice pr\xe9c\xe9dent pour cr\xe9er le composant ",(0,i.jsx)(n.code,{children:"NoteCard"}),"."]})}),"\n",(0,i.jsx)(n.h3,{id:"13-flatlist",children:"1.3 FlatList"}),"\n",(0,i.jsxs)(n.p,{children:["Pour afficher la liste des notes, nous allons utiliser le composant ",(0,i.jsx)(n.code,{children:"FlatList"}),". Une ",(0,i.jsx)(n.code,{children:"FlatList"})," est un composant qui permet de afficher une liste de donn\xe9es de mani\xe8re dynamique. Dans app/index.tsx, nous allons ajouter un ",(0,i.jsx)(n.code,{children:"FlatList"})," qui utilisera le composant ",(0,i.jsx)(n.code,{children:"NoteCard"})," pour chaque note."]}),"\n",(0,i.jsxs)(n.p,{children:["Vous trouverez un exemple d'utilisation dans la documentation officielle : ",(0,i.jsx)(n.a,{href:"https://docs.expo.dev/ui-programming/core-components/flatlist/",children:"FlatList"}),". Inspirez-vous de cet exemple pour afficher la liste des notes."]}),"\n",(0,i.jsxs)(n.p,{children:["Ne pas d'importer le composant ",(0,i.jsx)(n.code,{children:"NoteCard.tsx"})," le fichier index.tsx."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import NoteCard from "../components/NoteCard";\n\nexport default function Home() {\n  const [notes, setNotes] = useState<Note[]>(initialNotes);\n\n  return (\n    <View style={styles.container}>\n      {/* TODO: La FlatList doit \xeatre ici */}\n    </View>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.admonition,{title:"Conseil",type:"tip",children:(0,i.jsxs)(n.p,{children:["Dans la documentation les notes sont repr\xe9sent\xe9es par ",(0,i.jsx)(n.code,{children:"Item"})," et non ",(0,i.jsx)(n.code,{children:"NoteCard"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"-\xe9tape-2--page-de-d\xe9tail-dune-note",children:"\ud83d\udcdd \xc9tape 2 : Page de d\xe9tail d'une note"}),"\n",(0,i.jsx)(n.p,{children:"Maintenant que nous avons la liste des notes, nous allons cr\xe9er la page de d\xe9tail d'une note. Pour cela nous devons cr\xe9er une page qui affichera les informations d'une note. Cependant, il faut faire cela de fa\xe7on dynamique, c'est-\xe0-dire que nous devons pouvoir acc\xe9der \xe0 la page de d\xe9tail d'une note en utilisant son id."}),"\n",(0,i.jsx)(n.h3,{id:"21-configuration-du-routage",children:"2.1 Configuration du routage"}),"\n",(0,i.jsxs)(n.p,{children:["Nous avons cr\xe9\xe9 un dossier ",(0,i.jsx)(n.code,{children:"notes"})," dans ",(0,i.jsx)(n.code,{children:"app/"}),". Dans ce dossier il faut cr\xe9er un fichier ",(0,i.jsx)(n.code,{children:"[id].tsx"})," \xe0 l'int\xe9rieur. Pour l'affichage de la note voici un exemple ",(0,i.jsx)(n.strong,{children:"tr\xe8s basique"})," :"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { View, Text } from "react-native";\nimport { useLocalSearchParams } from "expo-router";\n\nexport default function NoteDetail() {\n  const { id } = useLocalSearchParams();\n\n  return (\n    <View>\n      <Text>Note Detail {id}</Text>\n    </View>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"22-comment-aller-vers-la-page-de-d\xe9tail-dune-note",children:"2.2 Comment aller vers la page de d\xe9tail d'une note"}),"\n",(0,i.jsxs)(n.p,{children:["La page note est cr\xe9\xe9e mais comment aller vers cette page ? Il faut ajouter un lien vers celle-ci pour chaque note de la page d'accueil. Pour cela nous allons utiliser le composant ",(0,i.jsx)(n.code,{children:"Link"})," de ",(0,i.jsx)(n.code,{children:"expo-router"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"export default function NoteCard({ note }: Props) {\n  return (\n    <Link href={`/notes/${note.id}`} asChild>\n      {/* Code pr\xe9c\xe9dent */}\n    </Link>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"A ce stade, vous pouvez acc\xe9der \xe0 la page de d\xe9tail d'une note en cliquant sur une note de la liste. Cependant, il manque la barre de navigation en haut et le bouton retour automatique. Pour cela nous allons devoir utiliser le Layout."}),"\n",(0,i.jsx)(n.h3,{id:"23-pourquoi-un-layout-",children:"2.3 Pourquoi un Layout ?"}),"\n",(0,i.jsx)(n.p,{children:"Le Layout joue un r\xf4le crucial dans notre application. Voici la diff\xe9rence entre une navigation avec et sans Layout :"}),"\n",(0,i.jsx)(n.h3,{id:"sans-layout",children:"Sans Layout"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u274c Pas de barre de navigation en haut"}),"\n",(0,i.jsx)(n.li,{children:"\u274c Pas de bouton retour automatique"}),"\n",(0,i.jsx)(n.li,{children:"\u274c Pas d'animations de transition"}),"\n",(0,i.jsx)(n.li,{children:'\u274c Pas de gestion native du "swipe to go back" sur iOS'}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"avec-layout",children:"Avec Layout"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u2705 Une barre de navigation professionnelle"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Un bouton retour automatique"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Des animations de transition fluides"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Une gestion native des gestes"}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{title:"Important",type:"danger",children:(0,i.jsx)(n.p,{children:"Sans Layout, votre application fonctionnera mais ne ressemblera pas \xe0 une vraie application mobile native !"})}),"\n",(0,i.jsx)(n.h2,{id:"-\xe9tape-3--layout",children:"\u2728 \xc9tape 3 : Layout"}),"\n",(0,i.jsx)(n.p,{children:"le layout est le composant racine de l'application. Il est important de le cr\xe9er pour que l'application fonctionne correctement. Il permet de g\xe9rer la navigation entre les diff\xe9rentes pages de l'application."}),"\n",(0,i.jsxs)(n.p,{children:["Cr\xe9ez un dossier ",(0,i.jsx)(n.code,{children:"layout"})," dans ",(0,i.jsx)(n.code,{children:"app/"})," avec un fichier ",(0,i.jsx)(n.code,{children:"_layout.tsx"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { Stack } from "expo-router";\n\nexport default function Layout() {\n  return (\n    <Stack\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: "#007AFF",\n        },\n        headerTintColor: "#fff",\n      }}\n    >\n      <Stack.Screen name="index" options={{ title: "DevNotes" }} />\n      <Stack.Screen name="notes/[id]" options={{ title: "Note Details" }} />\n    </Stack>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"-\xe9tape-4--nouvelle-note",children:"\u2728 \xc9tape 4 : Nouvelle note"}),"\n",(0,i.jsx)(n.h3,{id:"41-formulaire-de-cr\xe9ation",children:"4.1 Formulaire de cr\xe9ation"}),"\n",(0,i.jsxs)(n.p,{children:["Dans le app/new/index.tsx, nous allons cr\xe9er un formulaire pour cr\xe9er une nouvelle note. Pour cela nous allons utiliser les composants ",(0,i.jsx)(n.code,{children:"TextInput"}),". Le composant ",(0,i.jsx)(n.code,{children:"Pressable"})," sera utilis\xe9 pour le bouton de cr\xe9ation."]}),"\n",(0,i.jsxs)(n.p,{children:["Pour comprendre le fonctionnement d'un TextInput, consultez la documentation officielle : ",(0,i.jsx)(n.a,{href:"https://docs.expo.dev/ui-programming/core-components/textinput/",children:"TextInput"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Pour le Pressable, il suffit de faire appel \xe0 la fonction ",(0,i.jsx)(n.code,{children:"handleCreate"})," lorsque l'utilisateur appuie sur le bouton."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'import { View, TextInput, Pressable, Text, StyleSheet } from "react-native";\nimport { useRouter } from "expo-router";\nimport { useState } from "react";\nimport { addNoteEvent } from "../index";\n\nexport default function NewNote() {\n  const router = useRouter();\n  const [title, setTitle] = useState("");\n  const [content, setContent] = useState("");\n\n  const handleCreate = () => {\n    if (title && content) {\n      // \xc9mettre l\'\xe9v\xe9nement avec les donn\xe9es de la nouvelle note\n      addNoteEvent.emit("newNote", { title, content });\n      router.back();\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        placeholder="Title"\n        // TODO: Ajouter les \xe9l\xe9ments du formulaire\n      />\n      <TextInput\n        style={[styles.input, styles.contentInput]}\n        placeholder="Content"\n        // TODO: Ajouter les \xe9l\xe9ments du formulaire\n        multiline\n      />\n      <Pressable style={styles.button}>\n        <Text style={styles.buttonText}>Create Note</Text>\n      </Pressable>\n    </View>\n  );\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"42-ajout-du-bouton-de-cr\xe9ation",children:"4.2 Ajout du bouton de cr\xe9ation"}),"\n",(0,i.jsx)(n.p,{children:"Dans app/index.tsx, ajoutez un lien vers la page de cr\xe9ation de note."}),"\n",(0,i.jsx)(n.admonition,{title:"Conseil",type:"tip",children:(0,i.jsxs)(n.p,{children:["Pour ajouter un lien, il suffit d'utiliser le composant ",(0,i.jsx)(n.code,{children:"Link"})," de ",(0,i.jsx)(n.code,{children:"expo-router"}),". C'est similaire \xe0 ce qui a \xe9t\xe9 fait dans NoteCard.tsx."]})}),"\n",(0,i.jsx)(n.h3,{id:"43-configuration-du-routage",children:"4.3 Configuration du routage"}),"\n",(0,i.jsx)(n.p,{children:"Comme nous avons cr\xe9\xe9 une nouvelle page, il faut la rendre accessible. Pour cela, il faut ajouter la page dans le layout. Inspirez-vous du code du layout pour ajouter la page."})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},4710:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/02-01-app-9ae1ccac5ac661378d4fbd972c57843b.png"},6125:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/02-02-app-850869141ba92edc6ac8ff8f526e3c42.png"},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var o=t(6540);const i={},s=o.createContext(i);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);