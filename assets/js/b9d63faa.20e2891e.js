"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[11],{1662:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/03-02-app-a0dc5b321c93339266d7ee992d7e6e4a.png"},4517:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/03-01-app-f933e65d72b0e4c2d3d014d2f538bf93.png"},7166:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"exercices/devhub","title":"Exercice 3 : DevHub","description":"\ud83c\udfaf Objectifs","source":"@site/docs/exercices/03-devhub.md","sourceDirName":"exercices","slug":"/exercices/devhub","permalink":"/tp-react-native/docs/exercices/devhub","draft":false,"unlisted":false,"editUrl":"https://github.com/tanguyvans/tp-react-native/docs/exercices/03-devhub.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Exercice 3 : DevHub"},"sidebar":"tutorialSidebar","previous":{"title":"Exercice 2: DevNotes","permalink":"/tp-react-native/docs/exercices/devnotes"}}');var t=r(4848),i=r(8453);const o={sidebar_position:4,title:"Exercice 3 : DevHub"},a="DevHub",l={},c=[{value:"\ud83c\udfaf Objectifs",id:"-objectifs",level:2},{value:"\ud83d\udccb \xc9tape 1 : Cr\xe9er un projet Supabase",id:"-\xe9tape-1--cr\xe9er-un-projet-supabase",level:2},{value:"1.1 Installation des d\xe9pendances",id:"11-installation-des-d\xe9pendances",level:3},{value:"1.2 Cr\xe9er un projet Supabase",id:"12-cr\xe9er-un-projet-supabase",level:3},{value:"1.2 Variables d&#39;environnement",id:"12-variables-denvironnement",level:3},{value:"1.3 Gestion du Login et Register",id:"13-gestion-du-login-et-register",level:3},{value:"1.4 Gestion du Layout",id:"14-gestion-du-layout",level:3},{value:"\ud83d\udd10 \xc9tape 2 : API GitHub",id:"-\xe9tape-2--api-github",level:2},{value:"2.1 R\xe9cup\xe9rer les repositories trending",id:"21-r\xe9cup\xe9rer-les-repositories-trending",level:3},{value:"2.2 Afficher les repositories trending",id:"22-afficher-les-repositories-trending",level:3},{value:"\ud83d\udd10 \xc9tape 3 : Recherche de repositories",id:"-\xe9tape-3--recherche-de-repositories",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"devhub",children:"DevHub"})}),"\n",(0,t.jsx)(n.h2,{id:"-objectifs",children:"\ud83c\udfaf Objectifs"}),"\n",(0,t.jsx)(n.p,{children:"Dans cet exercice, vous apprendrez \xe0 :"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Comp\xe9tence"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\ud83d\udd10 Auth"}),(0,t.jsx)(n.td,{children:"Impl\xe9menter l'authentification avec GitHub"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\ud83d\udce1 API"}),(0,t.jsx)(n.td,{children:"Int\xe9grer l'API GitHub et Supabase"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\ud83d\udd04 \xc9tat"}),(0,t.jsx)(n.td,{children:"Synchroniser les donn\xe9es entre le client et le serveur"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"Voici \xe0 quoi ressemblera votre application finale :"}),"\n",(0,t.jsxs)("div",{style:{display:"flex",justifyContent:"center",gap:"20px",margin:"20px 0"},children:[(0,t.jsx)("img",{src:r(4517).A,alt:"DevHub App - Login",width:300}),(0,t.jsx)("img",{src:r(1662).A,alt:"DevHub App - Trending",width:300})]}),"\n",(0,t.jsx)(n.h2,{id:"-\xe9tape-1--cr\xe9er-un-projet-supabase",children:"\ud83d\udccb \xc9tape 1 : Cr\xe9er un projet Supabase"}),"\n",(0,t.jsx)(n.h3,{id:"11-installation-des-d\xe9pendances",children:"1.1 Installation des d\xe9pendances"}),"\n",(0,t.jsx)(n.p,{children:"Naviguez vers le dossier de l'exercice et installez les d\xe9pendances."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd exercises/03-devhub\nnpm install\n"})}),"\n",(0,t.jsx)(n.h3,{id:"12-cr\xe9er-un-projet-supabase",children:"1.2 Cr\xe9er un projet Supabase"}),"\n",(0,t.jsxs)(n.p,{children:["Cr\xe9ez un nouveau projet sur ",(0,t.jsx)(n.a,{href:"https://supabase.com",children:"Supabase"})," :"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Connectez-vous \xe0 votre compte Supabase"}),"\n",(0,t.jsx)(n.li,{children:"Cr\xe9ez un nouveau projet"}),"\n",(0,t.jsx)(n.li,{children:"Notez l'URL et la cl\xe9 d'API de votre projet"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"12-variables-denvironnement",children:"1.2 Variables d'environnement"}),"\n",(0,t.jsxs)(n.p,{children:["Naviguez vers le dossier de l'exercice et installez les d\xe9pendances. Ensuite on va copier le fichier ",(0,t.jsx)(n.code,{children:".env.example"})," et le renommer en ",(0,t.jsx)(n.code,{children:".env"}),". C'est dans ce fichier que vous mettrez votre cl\xe9 d'API Supabase."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cp .env.example .env\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Ouvrez le fichier ",(0,t.jsx)(n.code,{children:".env"})," et remplacez les valeurs par vos propres valeurs."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"EXPO_PUBLIC_SUPABASE_URL=\nEXPO_PUBLIC_SUPABASE_ANON_KEY=\n"})}),"\n",(0,t.jsx)(n.h3,{id:"13-gestion-du-login-et-register",children:"1.3 Gestion du Login et Register"}),"\n",(0,t.jsxs)(n.p,{children:["Pour la gestion du login et register, nous allons utiliser le SDK de Supabase. Pour cela dans le dossier ",(0,t.jsx)(n.code,{children:"lib"})," on va cr\xe9er un fichier ",(0,t.jsx)(n.code,{children:"supabase.ts"})," et on va y impl\xe9menter le SDK de Supabase. Dans ce dossier on retrouve nos variables d'environnement. Expo permet de faire appel \xe0 ces variables pour autant qu'elles poss\xe8dent le pr\xe9fixe ",(0,t.jsx)(n.code,{children:"EXPO_PUBLIC_"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'import "react-native-url-polyfill/auto";\nimport { createClient } from "@supabase/supabase-js";\n\nconst supabaseUrl = process.env.EXPO_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.EXPO_PUBLIC_SUPABASE_ANON_KEY;\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error("Missing Supabase environment variables");\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Maintenant qu'on a notre client Supabase, on va pouvoir l'utiliser dans notre application. Nous allons cr\xe9er une page de login et de register dans le dossier ",(0,t.jsx)(n.code,{children:"app/auth"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Les deux pages auront un formulaire et un bouton pour se connecter ou se register (similaire \xe0 l'exercice 2). la nouveaut\xe9 ici est que nous allons utiliser le SDK de Supabase pour g\xe9rer l'authentification."}),"\n",(0,t.jsxs)(n.p,{children:["La fonction SignUp ressemble a ceci. Il manque la partie ou on appelle le SDK de Supabase pour faire le SignUp. Pour cela regardez la documentation de ",(0,t.jsx)(n.a,{href:"https://supabase.com/docs/reference/javascript/auth-signup",children:"Supabase"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'async function signUp() {\n  if (!email || !password) {\n    Alert.alert("Error", "Please fill in all fields");\n    return;\n  }\n\n  setLoading(true);\n  try {\n    const { data, error } = await supabase.auth.signUp({\n      email,\n      password,\n    });\n\n    if (error) throw error;\n\n    if (data.session) {\n      router.replace("/(tabs)");\n    } else {\n      Alert.alert(\n        "Success",\n        "Registration successful. Please check your email.",\n        [{ text: "OK", onPress: () => router.replace("/auth/login") }]\n      );\n    }\n  } catch (error) {\n    Alert.alert("Error", (error as Error).message);\n  } finally {\n    setLoading(false);\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Pour la fonction de connexion, il faut utiliser la fonction ",(0,t.jsx)(n.code,{children:"signInWithPassword"})," de Supabase. Pour cela regardez la documentation de ",(0,t.jsx)(n.a,{href:"https://supabase.com/docs/reference/javascript/auth-signinwithpassword",children:"Supabase"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'async function signIn() {\n  if (!email || !password) {\n    Alert.alert("Error", "Please fill in all fields");\n    return;\n  }\n\n  setLoading(true);\n  try {\n    // TODO: Ajouter la connexion avec le SDK de Supabase\n\n    if (error) throw error;\n\n    router.replace("/(tabs)");\n  } catch (error) {\n    Alert.alert("Error", (error as Error).message);\n  } finally {\n    setLoading(false);\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"14-gestion-du-layout",children:"1.4 Gestion du Layout"}),"\n",(0,t.jsxs)(n.p,{children:["L'application aura 2 layouts. Le layout qui se trouve dans le dossier ",(0,t.jsx)(n.code,{children:"app"})," est le layout racine de l'application. Il est utilis\xe9 pour l'authentification et le layout ",(0,t.jsx)(n.code,{children:"(tabs)/_layout.tsx"})," sera utilis\xe9 pour les onglets (trending et recherche)."]}),"\n",(0,t.jsx)(n.p,{children:"Le premier layout est le suivant. Il permet de rediriger l'utilisateur vers la page de login si il n'est pas connect\xe9 et vers la page des onglets si il est connect\xe9. Pour cela la variable session est utilis\xe9e."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'export default function RootLayout() {\n  const [session, setSession] = useState<Session | null>(null);\n  const segments = useSegments();\n  const router = useRouter();\n\n  useEffect(() => {\n    //1. verifier si l\'utilisateur est connect\xe9\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setSession(session);\n    });\n\n    //2. \xe9couter les changements d\'\xe9tat de la session\n    supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n    });\n  }, []);\n\n  useEffect(() => {\n    const inAuthGroup = segments[0] === "auth";\n\n    if (!session && !inAuthGroup) {\n      router.replace("/auth/login");\n    } else if (session && inAuthGroup) {\n      router.replace("/(tabs)");\n    }\n  }, [session, segments]);\n\n  return <Slot />;\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Le deuxi\xe8me layout est le suivant. Il permet de g\xe9rer les onglets (trending et recherche)."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'export default function TabsLayout() {\n  const router = useRouter();\n\n  async function handleLogout() {\n    try {\n      const { error } = await supabase.auth.signOut();\n      if (error) throw error;\n      router.replace("/auth/login");\n    } catch (error) {\n      Alert.alert("Error logging out", (error as Error).message);\n    }\n  }\n\n  return (\n    <Tabs\n      screenOptions={{\n        tabBarActiveTintColor: "#007AFF",\n        headerRight: () => (\n          <TouchableOpacity onPress={handleLogout} style={{ marginRight: 16 }}>\n            <Ionicons name="log-out-outline" size={24} color="#007AFF" />\n          </TouchableOpacity>\n        ),\n      }}\n    >\n      <Tabs.Screen\n        name="index"\n        options={{\n          title: "Trending",\n          tabBarIcon: ({ color, size }) => (\n            <Ionicons name="trending-up" size={size} color={color} />\n          ),\n        }}\n      />\n      <Tabs.Screen\n        name="search"\n        options={{\n          title: "Search",\n          tabBarIcon: ({ color, size }) => (\n            <Ionicons name="search" size={size} color={color} />\n          ),\n        }}\n      />\n    </Tabs>\n  );\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"-\xe9tape-2--api-github",children:"\ud83d\udd10 \xc9tape 2 : API GitHub"}),"\n",(0,t.jsxs)(n.p,{children:["Dans la page Home, on affiche la liste des repositories trending. Pour cela on utilise l'API de GitHub. Dans le dossier ",(0,t.jsx)(n.code,{children:"lib"})," on peut voir le fichier ",(0,t.jsx)(n.code,{children:"github.ts"})," qui contient la configuration de l'API GitHub."]}),"\n",(0,t.jsx)(n.p,{children:"Dans ce dossier on retrouve les informations que l'on recup\xe8re:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"type Repository = {\n  id: number;\n  name: string;\n  owner: {\n    login: string;\n  };\n  description: string;\n  stargazers_count: number;\n  html_url: string;\n};\n"})}),"\n",(0,t.jsx)(n.p,{children:"Nous avons egalement deux fonctions qui permettent de r\xe9cup\xe9rer les repositories trending et les repositories recherch\xe9s:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'export const github = {\n  // Obtenir les repos tendance (limit\xe9 \xe0 30 r\xe9sultats)\n  getTrendingRepos: () =>\n    fetchFromGitHub<Repository>(\n      "/search/repositories?q=stars:>1&sort=stars&order=desc&per_page=30"\n    ),\n\n  // Rechercher des repos\n  searchRepos: (query: string) =>\n    fetchFromGitHub<Repository>(\n      `/search/repositories?q=${encodeURIComponent(query)}&per_page=30`\n    ),\n};\n'})}),"\n",(0,t.jsx)(n.h3,{id:"21-r\xe9cup\xe9rer-les-repositories-trending",children:"2.1 R\xe9cup\xe9rer les repositories trending"}),"\n",(0,t.jsxs)(n.p,{children:["Pour r\xe9cup\xe9rer les repositories trending, on utilise la fonction ",(0,t.jsx)(n.code,{children:"getTrendingRepos"})," qui fait une requ\xeate \xe0 l'API de GitHub. Dans le fichier ",(0,t.jsx)(n.code,{children:"app/(tabs)/index.tsx"})," on peut voir la fonction ",(0,t.jsx)(n.code,{children:"loadTrendingRepos"})," qui permet de r\xe9cup\xe9rer les repositories trending."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'async function loadTrendingRepos() {\n  try {\n    // TODO: R\xe9cup\xe9rer les repositories trending\n    // Mettre \xe0 jour la variable repos avec les repositories trending\n  } catch (error) {\n    console.error("Error:", error);\n  } finally {\n    setLoading(false);\n  }\n}\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Pour r\xe9cup\xe9rer les repositories trending, on utilise la fonction ",(0,t.jsx)(n.code,{children:"getTrendingRepos"})," qui fait une requ\xeate \xe0 l'API de GitHub. Ensuite il faut mettre \xe0 jour le useState ",(0,t.jsx)(n.code,{children:"repos"})," avec les repositories trending."]})}),"\n",(0,t.jsx)(n.h3,{id:"22-afficher-les-repositories-trending",children:"2.2 Afficher les repositories trending"}),"\n",(0,t.jsxs)(n.p,{children:["Toujours dans le fichier ",(0,t.jsx)(n.code,{children:"app/(tabs)/index.tsx"})," on peut voir la fonction ",(0,t.jsx)(n.code,{children:"useRepos"})," qui permet de r\xe9cup\xe9rer les repositories trending."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"return (\n  <SafeAreaView style={styles.container}>\n    // TODO: Afficher les repositories trending avec une FlatList\n  </SafeAreaView>\n);\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Pour afficher les repositories trending, on utilise une FlatList. Vous pouvez soit utiliser le composant ",(0,t.jsx)(n.code,{children:"RepoCard"})," ou cr\xe9er votre propre composant ou utiliser des variables Text et View."]})}),"\n",(0,t.jsx)(n.h2,{id:"-\xe9tape-3--recherche-de-repositories",children:"\ud83d\udd10 \xc9tape 3 : Recherche de repositories"}),"\n",(0,t.jsxs)(n.p,{children:["Similaire \xe0 l'\xe9tape 2, on va ajouter une fonction pour rechercher des repositories. Dans le fichier ",(0,t.jsx)(n.code,{children:"app/(tabs)/search.tsx"})," on peut voir la fonction ",(0,t.jsx)(n.code,{children:"searchRepos"})," qui permet de rechercher des repositories."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'export default function SearchScreen() {\n  const [query, setQuery] = useState("");\n  const [repos, setRepos] = useState<Repository[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  async function searchRepos() {\n    if (!query.trim()) return;\n\n    setLoading(true);\n    try {\n      // TODO: Rechercher des repositories avec la fonction `searchRepos`\n    } catch (error) {\n      console.error("Error:", error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        value={query}\n        onChangeText={setQuery}\n        onSubmitEditing={searchRepos}\n        placeholder="Search repositories..."\n        returnKeyType="search"\n      />\n      {loading ? (\n        <ActivityIndicator style={styles.center} size="large" />\n      ) : (\n        // TODO: Afficher les repositories recherch\xe9s avec une FlatList\n      )}\n    </View>\n  );\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var s=r(6540);const t={},i=s.createContext(t);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);